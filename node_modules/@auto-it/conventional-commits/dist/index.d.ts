import * as t from "io-ts";
import { Auto, IPlugin } from "@auto-it/core";
declare const optionalOptions: t.PartialC<{
    /** A path to the formula template */
    preset: t.StringC;
    /** The default release type to apply when the conventional commit isn't "fix", "feat" or "breaking" */
    defaultReleaseType: t.StringC;
}>;
export declare type ConventionalCommitsOptions = t.TypeOf<typeof optionalOptions>;
/**
 * Parse conventional commit messages and use them to
 * calculate the version.
 */
export default class ConventionalCommitsPlugin implements IPlugin {
    /** The name of the plugin */
    name: string;
    /** The options of the plugin */
    private readonly options;
    /** The getBump function stored on the plugin so we don't load the config for every commit */
    private storedGetBump?;
    /** Initialize the plugin with it's options */
    constructor(options?: ConventionalCommitsOptions);
    /** Tap into auto plugin points. */
    apply(auto: Auto): void;
}
export {};
//# sourceMappingURL=index.d.ts.map